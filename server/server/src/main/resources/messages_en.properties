core.dataset.name_not_valid=Dataset name not valid
core.storage.repo.no_dir=No repository dir assigned
core.storage.repo.dataset.exists=Dataset name={0} already exists
core.storage.repo.item.not_exists=Item id={0} not found
core.storage.repo.item.exists=Item id={0} already exists
core.tagger.meta.image.error=Error processing content image: {0}
core.tagger.phash.error=Error calculating perceptual hash: {0}
db.indexer.dataset.id_not_found=Dataset id={0} not found
db.indexer.dataset.name_not_found=Dataset name={0} not found
db.indexer.dataset.exists=Dataset name={0} already exists
db.indexer.dataset.item.not_null=Input item can not be null
db.indexer.dataset.item.id_not_found=Item id={0} not found
db.indexer.dataset.item.hash_not_found=Item hash={0} not found
db.indexer.dataset.item.exists=Item hash={0} already exists
db.indexer.dataset.item.blank_filename=Filename is blank
db.indexer.dataset.item.content_null=Item content is null
db.indexer.dataset.item.hash_null=Hash can not be null
db.indexer.dataset.item.not_file_type=Item type not detected
db.indexer.dataset.item.type.not_null=Type de item can not be null
db.indexer.dataset.metadata_tagger.not_found=Metadata tagger for type {0} not found
db.indexer.dataset.tag.id_not_found=Tag id={0} not found
db.indexer.dataset.tag.null=Tag can not be null
db.indexer.dataset.tag.name_null=Tag name can not be null
api.dataset.name.notEmpty=Dataset name cannot be empty
api.dataset.item.tag.name.notEmpty=Tag name cannot be empty
api.dataset.item.tag.value.notEmpty=Tag value cannot be empty